#================================================================================
# This script analyzies the relationship between animal population and nitrate
# for wells when they have almost similar conductivity
#================================================================================
#%%
import sys
sys.path.insert(0,'src')
sys.path.insert(0, 'src/data')

import pandas as pd
import config
import numpy as np
import matplotlib.pyplot as plt 
import ppfun as dp


# Read dataset
df = pd.read_csv(config.data_processed / "Dataset_processed.csv")
df = df[df.well_data_source == 'UCD']
df = df[df.measurement_count > 3]
# df = df[df.city_inside_outside == 'outside_city']
df = df[df.city_inside_outside == 'inside_city']

df = df[['well_id','Conductivity','mean_nitrate','area_wt_sagbi', 'Cafo_Population_5miles','Average_ag_area','change_per_year','total_ag_2010','APPROXIMATE LATITUDE', 'APPROXIMATE LONGITUDE','city_inside_outside']]
# df = df.head(1000)

#%%
plt.scatter(df.Conductivity, df.mean_nitrate, s = 1.5, c = 'red')
plt.ylim(0 ,600)
plt.xlabel('Conductivity')
plt.ylabel('Nitrate')

#%%
#================================================
# Conductivity vs Percent above curoff cutoff for different SAGBI
#================================================

min_cond = 0
max_cond = .2
interval_cond = .01
nitrate_threshold = 20

# Define a color map for the intervals
color_map = {0: 'black', 30: 'red', 50: 'blue', 75: 'green', 85: 'orange'}

# df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]

# Create a new dataframe to store the results
results_df = pd.DataFrame(columns=['cutoff', 'count_above_cutoff', 'percent_above_cutoff'])

# A list to store the scatter plot objects
scatter_plots = []
fig, ax = plt.subplots()

for sagbi_threshold in [0, 30, 50, 75, 85]:
    df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]
 
    # Loop through the different conductivity_scoring cutoffs
    for interval in np.arange(min_cond, max_cond+interval_cond, interval_cond):
        
        # Conductivity below a value
        df_temp = df_filtered[(df_filtered['Conductivity'] <= interval)]

        # Total count of nitrate greater than threshold
        count_above_cutoff = df_temp[df_temp['mean_nitrate'] >= nitrate_threshold].shape[0]

        # Percent of the cases nitrate above threshold can be eliminated for a cutoff conductivity
        if df_temp.shape[0] == 0: # handle division by zero case
            percent_above_cutoff = np.nan
        else:
            percent_above_cutoff = count_above_cutoff / df_filtered[df_filtered['mean_nitrate'] >= nitrate_threshold].shape[0]
            # percent_above_cutoff = count_above_cutoff / df[df['mean_nitrate'] >= nitrate_threshold].shape[0]
        
        temp_df = pd.DataFrame({'cutoff': interval, 'count_above_cutoff': count_above_cutoff, 'percent_above_cutoff': percent_above_cutoff, 'sagbi_threshold': sagbi_threshold}, index=[0])
        results_df = pd.concat([results_df, temp_df], ignore_index=True)

        # Create a scatter plot for the current sagbi_threshold value
        # scatter_plot = plt.scatter(temp_df['cutoff'], temp_df['percent_above_cutoff'], c=color_map[sagbi_threshold], label=sagbi_threshold)
        # scatter_plots.append(scatter_plot)
        scatter_plot = ax.scatter(temp_df['cutoff'], temp_df['percent_above_cutoff'], c=color_map[sagbi_threshold], label=sagbi_threshold)
        scatter_plots.append(scatter_plot)
        

# Plot the legend using the scatter_plots list
plt.legend([scatter_plots[i] for i in [0, 30, 50, 75, 85]], [0, 30, 50, 75, 85],bbox_to_anchor=(1, 0), loc='lower right', ncol=1)
# plt.legend(scatter_plots, [0, 30, 50, 75, 85],bbox_to_anchor=(1, 0), loc='lower right', ncol=1)
# plt.legend()
plt.xlabel('Cutoff conductivity')
plt.ylabel('Percent Above Cutoff')
plt.title('Scatter plot of Cutoff conductivity and Percent Above Cutoff')
plt.show()
# %%

#=========================================================
# Conductivity vs nitrate for each sagbi intervals scatterplot
#=========================================================
#%%
min_cond = 0
max_cond = .2
interval_cond = .01
nitrate_threshold = 10

# Define a color map for the intervals
color_map = {0: 'black', 30: 'red', 50: 'blue', 75: 'green', 85: 'orange'}

# df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]

# Create a new dataframe to store the results
results_df = pd.DataFrame(columns=['cutoff', 'count_above_cutoff', 'percent_above_cutoff'])

# A list to store the scatter plot objects
scatter_plots = []
fig, ax = plt.subplots()

for sagbi_threshold in [0, 30, 50, 75, 85]:
    df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]


    plt.scatter(df_filtered['Conductivity'], df_filtered['mean_nitrate'])
    plt.xlabel('Conductivity')
    plt.ylabel('Mean nitrate')
    plt.title(f'SAGBI >= {sagbi_threshold}')
    plt.xlim(0 ,.6)
    plt.ylim(0 ,100)
    plt.show()


#=========================================================
# Ag area vs nitrate for each sagbi intervals
#=========================================================
#%%
min_cond = 0
max_cond = .2
interval_cond = .01
nitrate_threshold = 10
conductivity_threshold = 0.05

# Define a color map for the intervals
color_map = {0: 'black', 30: 'red', 50: 'blue', 75: 'green', 85: 'orange'}

# df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]

# Create a new dataframe to store the results
results_df = pd.DataFrame(columns=['cutoff', 'count_above_cutoff', 'percent_above_cutoff'])

# A list to store the scatter plot objects
scatter_plots = []
fig, ax = plt.subplots()

for sagbi_threshold in [0, 30, 50, 75, 85]:
    df_filtered = df[(df['area_wt_sagbi'] >= sagbi_threshold)]

    df_filtered = df_filtered[(df_filtered['Conductivity'] >= conductivity_threshold)]

    plt.scatter(df_filtered['Average_ag_area'], df_filtered['mean_nitrate'])
    plt.xlabel('Average Ag area')
    plt.ylabel('Mean nitrate')
    plt.title(f'SAGBI >= {sagbi_threshold}')
    # plt.xlim(0 ,.6)
    plt.ylim(0 ,100)
    plt.show()

# %%
